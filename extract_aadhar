#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Simple Aadhaar validator:
- Scans all *.txt files under INPUT_FOLDER (recursive)
- Extracts 12-digit candidates (not embedded in longer numbers)
- Validates with Verhoeff checksum
- Writes a single report TXT into OUTPUT_FOLDER
"""

import re
import sys
import traceback
from pathlib import Path
from functools import lru_cache

# ========== CONFIGURE ONLY THESE ==========
INPUT_FOLDER  = "input_logs"        # <-- put your input folder path here
OUTPUT_FOLDER = "aadhaar_output"    # <-- output folder to create/write report
REPORT_NAME   = "aadhaar_report.txt"
# ==========================================

# ---------- Aadhaar Verhoeff ----------
@lru_cache(maxsize=10000)
def is_valid_aadhaar(number: str) -> bool:
    if len(number) != 12 or not number.isdigit():
        return False
    mul = [
        [0,1,2,3,4,5,6,7,8,9],
        [1,2,3,4,0,6,7,8,9,5],
        [2,3,4,0,1,7,8,9,5,6],
        [3,4,0,1,2,8,9,5,6,7],
        [4,0,1,2,3,9,5,6,7,8],
        [5,9,8,7,6,0,4,3,2,1],
        [6,5,9,8,7,1,0,4,3,2],
        [7,6,5,9,8,2,1,0,4,3],
        [8,7,6,5,9,3,2,1,0,4],
        [9,8,7,6,5,4,3,2,1,0]
    ]
    perm = [
        [0,1,2,3,4,5,6,7,8,9],
        [1,5,7,6,2,8,3,0,9,4],
        [5,8,0,3,7,9,6,1,4,2],
        [8,9,1,6,0,4,3,5,2,7],
        [9,4,5,3,1,2,6,8,7,0],
        [4,2,8,6,5,7,3,9,0,1],
        [2,7,9,3,8,0,6,4,1,5],
        [7,0,4,6,9,1,3,2,5,8]
    ]
    inv = [0,4,3,2,1,5,6,7,8,9]
    c = 0
    for i, ch in enumerate(reversed(number)):
        c = mul[c][perm[i % 8][int(ch)]]
    return inv[c] == 0

def main():
    in_path = Path(INPUT_FOLDER)
    out_path = Path(OUTPUT_FOLDER)
    report_path = out_path / REPORT_NAME

    if not in_path.exists() or not in_path.is_dir():
        print(f"❌ INPUT_FOLDER not found or not a directory: {in_path}")
        sys.exit(1)

    out_path.mkdir(parents=True, exist_ok=True)

    # 12 digits, not embedded within other digits
    aadhaar_pattern = re.compile(r'(?<!\d)\d{12}(?!\d)')

    files_scanned = 0
    total_candidates = 0
    total_valid = 0
    total_invalid = 0
    per_file = []

    for txt in sorted(in_path.rglob("*.txt")):
        files_scanned += 1
        f_found = f_valid = f_invalid = 0

        try:
            with txt.open("r", encoding="utf-8", errors="ignore") as f:
                for line in f:
                    for num in aadhaar_pattern.findall(line):
                        total_candidates += 1
                        f_found += 1
                        if is_valid_aadhaar(num):
                            total_valid += 1
                            f_valid += 1
                        else:
                            total_invalid += 1
                            f_invalid += 1
        except Exception:
            traceback.print_exc()
            per_file.append(f"{txt}: ERROR while reading (counted as 0/0/0)")
            continue

        per_file.append(
            f"{txt} -> candidates={f_found}, valid={f_valid}, invalid={f_invalid}"
        )

    with report_path.open("w", encoding="utf-8") as rf:
        rf.write("===== Aadhaar Validation Report =====\n\n")
        rf.write(f"Input folder   : {in_path}\n")
        rf.write(f"Output folder  : {out_path}\n")
        rf.write(f"Files scanned  : {files_scanned}\n\n")

        rf.write(f"Total candidates (12-digit): {total_candidates}\n")
        rf.write(f"Valid Aadhaar              : {total_valid}\n")
        rf.write(f"Invalid Aadhaar            : {total_invalid}\n\n")

        rf.write("----- Per-file breakdown -----\n")
        for row in per_file:
            rf.write(row + "\n")

    print(f"✅ Report written: {report_path}")

if __name__ == "__main__":
    main()
